version: '2'

services:
  db:
    build:
      context: ..
      dockerfile: ./docker/postgres.docker
    environment:
      POSTGRES_USER: 'postgres'
      POSTGRES_PASSWORD: 'postgres'
    
    volumes:
      - data-volume:/var/lib/postgresql/data
    ports:
      - "5432:5432"

  rabbitmq:
    image: rabbitmq

  nginx:
    build:
      context: ..
      dockerfile: ./docker/nginx.docker
    entrypoint: ["nginx", "-g", "daemon off;"]
    ports:
      - "8000:8000"
    depends_on:
      - web
    volumes:
      - media-volume:/blog/uploads

  manage:
    build:
      context: ..
      dockerfile: ./docker/app.docker
    volumes:
      - media-volume:/blog/uploads

  web:
    extends:
      service: manage
    environment:
      POSTGRES_USER: 'postgres'
      POSTGRES_PASSWORD: 'postgres'
      DJANGO_SETTINGS_MODULE: 'blog.settings.prod'
    
    entrypoint: [ "scripts/web/wait_db_ready.sh", "db", "init/db_init.sh" ]
    ports:
      - "8001:8001"
    depends_on: 
      - db

  celery:
    extends:
      service: manage
    environment:
      POSTGRES_USER: 'postgres'
      POSTGRES_PASSWORD: 'postgres'
      DJANGO_SETTINGS_MODULE: 'blog.settings.prod'

    entrypoint: [ "celery", "-A", "blog", "worker", "-l", "info" ]
    depends_on:
      - db
      - rabbitmq

volumes:
  media-volume:
  data-volume:
